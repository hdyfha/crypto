def extended_gcd(aa, bb):
    lastremainder, remainder = abs(aa), abs(bb)
    x, lastx, y, lasty = 0, 1, 1, 0
    while remainder:
        lastremainder, (quotient, remainder) = remainder, divmod(lastremainder, remainder)
        x, lastx = lastx - quotient*x, x
        y, lasty = lasty - quotient*y, y
    return lastremainder, lastx * (-1 if aa < 0 else 1), lasty * (-1 if bb < 0 else 1)

def modinv(a, m):
    g, x, y = extended_gcd(a, m)
    if g != 1:
        raise ValueError
    return x % m

p  = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141
r  = 0x385570073629551546729230374184391439442417095537024350206131291065055332733
s1 = 0x76130260662571134678372154009160868461537800596554110575850229341703072615102
s2 = 0x56368220214898939855776145385640746541620815395185097101215290078962069907292
z1 = 0x42268864623620244998249895290537358742158169262361846431272029622156081203721
z2 = 0x87726031595873281985439431891132599611815665254308710544703498112157039462043


print (hex(((z1*s2 - z2*s1) * modinv((r*(s1-s2)),p)) % p))













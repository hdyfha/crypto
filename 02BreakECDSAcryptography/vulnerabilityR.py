def extended_gcd(aa, bb):
    lastremainder, remainder = abs(aa), abs(bb)
    x, lastx, y, lasty = 0, 1, 1, 0
    while remainder:
        lastremainder, (quotient, remainder) = remainder, divmod(lastremainder, remainder)
        x, lastx = lastx - quotient*x, x
        y, lasty = lasty - quotient*y, y
    return lastremainder, lastx * (-1 if aa < 0 else 1), lasty * (-1 if bb < 0 else 1)

def modinv(a, m):
    g, x, y = extended_gcd(a, m)
    if g != 1:
        raise ValueError
    return x % m

p  = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141
r  = 0x00da3994e2e3127562c5c5985905aee8adcab095c868ce42642707ffc006497d
s1 = 0x00a850335707cbe5956068f1244f4a96f5fd1c2df073b5fe6a87362c97693b8abe
s2 = 0x56368220214898939855776145385640746541620815395185097101215290078962069907292
z1 = 0x5d73545e71ef9030effa28250de41237fcded00d833c6a63842aed9a0a538a09
z2 = 0x87726031595873281985439431891132599611815665254308710544703498112157039462043


print (hex(((z1*s2 - z2*s1) * modinv((r*(s1-s2)),p)) % p))












